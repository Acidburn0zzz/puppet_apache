<%
vhost_parts = case ssl_mode
  when 'only' then [:ssl]
  when false then  [:normal]
  when 'false' then  [:normal]
  else [:normal,:ssl]
end
vhost_parts.each do |vhost_part|
  scope.unsetvar('vhost_part')
  scope.setvar('vhost_part',vhost_part)
-%>
<VirtualHost *:<%= vhost_part == :ssl ? '443' : '80' %> >

<%= scope.function_template('apache/vhosts/partials/header_default.erb') %>

<%= scope.function_template('apache/vhosts/partials/logs.erb') %>

  <% if ssl_mode == 'force' && vhost_part == :normal -%>
  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteRule (.*) https://%{SERVER_NAME}$1 [R=permanent,L]
  <% else -%>
<%= scope.function_template(template_partial) %>
  <% end -%>
  <IfModule mod_security2.c>
    <%- if mod_security.to_s == 'true' then -%>
    SecRuleEngine On
    <%- if mod_security_relevantonly.to_s == 'true' then -%>
    SecAuditEngine RelevantOnly
    <%- else -%>
    SecAuditEngine On
    <%- end -%>
    <%- else -%>
    SecRuleEngine Off
    SecAuditEngine Off
    <%- end -%>
    SecAuditLogType Concurrent
    SecAuditLogStorageDir <%= logdir %>/
    SecAuditLog <%= logdir %>/mod_security_audit.log
    SecDebugLog <%= logdir %>/mod_security_debug.log
  </IfModule>

  <%- unless additional_options.to_s == 'absent' then -%>
  <%= additional_options %>
  <%- end -%>
</VirtualHost>
<% end -%>